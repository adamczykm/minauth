/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC721TimeLock,
  ERC721TimeLockInterface,
} from "../../contracts/ERC721TimeLock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "TokenLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "TokenUnlocked",
    type: "event",
  },
  {
    inputs: [],
    name: "HASH_BIT_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getLockedTokens",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct ERC721TimeLock.LockedToken[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    name: "lockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockedTokens",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012d3380380620012d38339818101604052810190620000379190620000cb565b600081116200007d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000749062000184565b60405180910390fd5b8060008190555050620001a6565b600080fd5b6000819050919050565b620000a58162000090565b8114620000b157600080fd5b50565b600081519050620000c5816200009a565b92915050565b600060208284031215620000e457620000e36200008b565b5b6000620000f484828501620000b4565b91505092915050565b600082825260208201905092915050565b7f4c6f636b20706572696f64206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b60006200016c602283620000fd565b915062000179826200010e565b604082019050919050565b600060208201905081810360008301526200019f816200015d565b9050919050565b61111d80620001b66000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806303e9d549146100675780633fd8b02f1461008357806353719b6e146100a1578063576c9698146100d45780636b2d95d4146100f2578063dd2e0ac014610122575b600080fd5b610081600480360381019061007c9190610b39565b61013e565b005b61008b610378565b6040516100989190610b9b565b60405180910390f35b6100bb60048036038101906100b69190610bb6565b61037e565b6040516100cb9493929190610c14565b60405180910390f35b6100dc6103eb565b6040516100e99190610b9b565b60405180910390f35b61010c60048036038101906101079190610c59565b6103f1565b6040516101199190610db7565b60405180910390f35b61013c60048036038101906101379190610dd9565b610503565b005b6000801b8111610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a90610e63565b60405180910390fd5b60008054426101929190610eb2565b90508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016101d193929190610ee6565b600060405180830381600087803b1580156101eb57600080fd5b505af11580156101ff573d6000803e3d6000fd5b50505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200183815260200184815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f77dfb07bb6f781b511be14c4025fae5dd867cfa7ef8e7b0d5c7bf0bc7a4f63ae85848660405161036a93929190610f1d565b60405180910390a350505050565b60005481565b6001602052816000526040600020818154811061039a57600080fd5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b61010081565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156104f857838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610452565b505050509050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e90610fa0565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106105da576105d9610fc0565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481525050905080604001514210156106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a79061103b565b60405180910390fd5b6106ba33836107a8565b806000015173ffffffffffffffffffffffffffffffffffffffff166323b872dd303384602001516040518463ffffffff1660e01b81526004016106ff93929190610ee6565b600060405180830381600087803b15801561071957600080fd5b505af115801561072d573d6000803e3d6000fd5b50505050806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2abf8b5fe6d16c9fffaea0f444d998e2856241f2404e70d24086cec75b783ce78360200151846060015160405161079c92919061105b565b60405180910390a35050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061082c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082390610fa0565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506108b99190611084565b815481106108ca576108c9610fc0565b5b9060005260206000209060040201600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061092957610928610fc0565b5b90600052602060002090600402016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820154816002015560038201548160030155905050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480610a0e57610a0d6110b8565b5b6001900381819060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560028201600090556003820160009055505090555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9a82610a6f565b9050919050565b610aaa81610a8f565b8114610ab557600080fd5b50565b600081359050610ac781610aa1565b92915050565b6000819050919050565b610ae081610acd565b8114610aeb57600080fd5b50565b600081359050610afd81610ad7565b92915050565b6000819050919050565b610b1681610b03565b8114610b2157600080fd5b50565b600081359050610b3381610b0d565b92915050565b600080600060608486031215610b5257610b51610a6a565b5b6000610b6086828701610ab8565b9350506020610b7186828701610aee565b9250506040610b8286828701610b24565b9150509250925092565b610b9581610acd565b82525050565b6000602082019050610bb06000830184610b8c565b92915050565b60008060408385031215610bcd57610bcc610a6a565b5b6000610bdb85828601610ab8565b9250506020610bec85828601610aee565b9150509250929050565b610bff81610a8f565b82525050565b610c0e81610b03565b82525050565b6000608082019050610c296000830187610bf6565b610c366020830186610b8c565b610c436040830185610b8c565b610c506060830184610c05565b95945050505050565b600060208284031215610c6f57610c6e610a6a565b5b6000610c7d84828501610ab8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cbb81610a8f565b82525050565b610cca81610acd565b82525050565b610cd981610b03565b82525050565b608082016000820151610cf56000850182610cb2565b506020820151610d086020850182610cc1565b506040820151610d1b6040850182610cc1565b506060820151610d2e6060850182610cd0565b50505050565b6000610d408383610cdf565b60808301905092915050565b6000602082019050919050565b6000610d6482610c86565b610d6e8185610c91565b9350610d7983610ca2565b8060005b83811015610daa578151610d918882610d34565b9750610d9c83610d4c565b925050600181019050610d7d565b5085935050505092915050565b60006020820190508181036000830152610dd18184610d59565b905092915050565b600060208284031215610def57610dee610a6a565b5b6000610dfd84828501610aee565b91505092915050565b600082825260208201905092915050565b7f48617368206d757374206265206e6f6e2d7a65726f0000000000000000000000600082015250565b6000610e4d601583610e06565b9150610e5882610e17565b602082019050919050565b60006020820190508181036000830152610e7c81610e40565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ebd82610acd565b9150610ec883610acd565b9250828201905080821115610ee057610edf610e83565b5b92915050565b6000606082019050610efb6000830186610bf6565b610f086020830185610bf6565b610f156040830184610b8c565b949350505050565b6000606082019050610f326000830186610b8c565b610f3f6020830185610b8c565b610f4c6040830184610c05565b949350505050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000610f8a600d83610e06565b9150610f9582610f54565b602082019050919050565b60006020820190508181036000830152610fb981610f7d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f546f6b656e206973207374696c6c206c6f636b65640000000000000000000000600082015250565b6000611025601583610e06565b915061103082610fef565b602082019050919050565b6000602082019050818103600083015261105481611018565b9050919050565b60006040820190506110706000830185610b8c565b61107d6020830184610c05565b9392505050565b600061108f82610acd565b915061109a83610acd565b92508282039050818111156110b2576110b1610e83565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220f6fa091f1d9f1e9600996945f562f56cd042560ebe11379809b5d182c158af1d64736f6c63430008140033";

type ERC721TimeLockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TimeLockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721TimeLock__factory extends ContractFactory {
  constructor(...args: ERC721TimeLockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _lockPeriod: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_lockPeriod, overrides || {});
  }
  override deploy(
    _lockPeriod: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_lockPeriod, overrides || {}) as Promise<
      ERC721TimeLock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721TimeLock__factory {
    return super.connect(runner) as ERC721TimeLock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TimeLockInterface {
    return new Interface(_abi) as ERC721TimeLockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC721TimeLock {
    return new Contract(address, _abi, runner) as unknown as ERC721TimeLock;
  }
}
