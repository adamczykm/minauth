/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC721Mock,
  ERC721MockInterface,
} from "../../contracts/ERC721Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200241a3803806200241a8339818101604052810190620000379190620001fa565b818181600090816200004a9190620004ca565b5080600190816200005c9190620004ca565b5050505050620005b1565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000d08262000085565b810181811067ffffffffffffffff82111715620000f257620000f162000096565b5b80604052505050565b60006200010762000067565b9050620001158282620000c5565b919050565b600067ffffffffffffffff82111562000138576200013762000096565b5b620001438262000085565b9050602081019050919050565b60005b838110156200017057808201518184015260208101905062000153565b60008484015250505050565b6000620001936200018d846200011a565b620000fb565b905082815260208101848484011115620001b257620001b162000080565b5b620001bf84828562000150565b509392505050565b600082601f830112620001df57620001de6200007b565b5b8151620001f18482602086016200017c565b91505092915050565b6000806040838503121562000214576200021362000071565b5b600083015167ffffffffffffffff81111562000235576200023462000076565b5b6200024385828601620001c7565b925050602083015167ffffffffffffffff81111562000267576200026662000076565b5b6200027585828601620001c7565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002d257607f821691505b602082108103620002e857620002e76200028a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000313565b6200035e868362000313565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ab620003a56200039f8462000376565b62000380565b62000376565b9050919050565b6000819050919050565b620003c7836200038a565b620003df620003d682620003b2565b84845462000320565b825550505050565b600090565b620003f6620003e7565b62000403818484620003bc565b505050565b5b818110156200042b576200041f600082620003ec565b60018101905062000409565b5050565b601f8211156200047a576200044481620002ee565b6200044f8462000303565b810160208510156200045f578190505b620004776200046e8562000303565b83018262000408565b50505b505050565b600082821c905092915050565b60006200049f600019846008026200047f565b1980831691505092915050565b6000620004ba83836200048c565b9150826002028217905092915050565b620004d5826200027f565b67ffffffffffffffff811115620004f157620004f062000096565b5b620004fd8254620002b9565b6200050a8282856200042f565b600060209050601f8311600181146200054257600084156200052d578287015190505b620005398582620004ac565b865550620005a9565b601f1984166200055286620002ee565b60005b828110156200057c5784890151825560018201915060208501945060208101905062000555565b868310156200059c578489015162000598601f8916826200048c565b8355505b6001600288020188555050505b505050505050565b611e5980620005c16000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636a6278421161008c578063a22cb46511610066578063a22cb4651461026f578063b88d4fde1461028b578063c87b56dd146102a7578063e985e9c5146102d7576100ea565b80636a627842146101f157806370a082311461022157806395d89b4114610251576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a55780636352211e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b61010960048036038101906101049190611640565b610307565b6040516101169190611688565b60405180910390f35b6101276103e9565b6040516101349190611733565b60405180910390f35b6101576004803603810190610152919061178b565b61047b565b60405161016491906117f9565b60405180910390f35b61018760048036038101906101829190611840565b610497565b005b6101a3600480360381019061019e9190611880565b6104ad565b005b6101bf60048036038101906101ba9190611880565b6105af565b005b6101db60048036038101906101d6919061178b565b6105cf565b6040516101e891906117f9565b60405180910390f35b61020b600480360381019061020691906118d3565b6105e1565b604051610218919061190f565b60405180910390f35b61023b600480360381019061023691906118d3565b610617565b604051610248919061190f565b60405180910390f35b6102596106d1565b6040516102669190611733565b60405180910390f35b61028960048036038101906102849190611956565b610763565b005b6102a560048036038101906102a09190611acb565b610779565b005b6102c160048036038101906102bc919061178b565b610796565b6040516102ce9190611733565b60405180910390f35b6102f160048036038101906102ec9190611b4e565b6107ff565b6040516102fe9190611688565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e257506103e182610893565b5b9050919050565b6060600080546103f890611bbd565b80601f016020809104026020016040519081016040528092919081815260200182805461042490611bbd565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b5050505050905090565b6000610486826108fd565b5061049082610985565b9050919050565b6104a982826104a46109c2565b6109ca565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361051f5760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161051691906117f9565b60405180910390fd5b6000610533838361052e6109c2565b6109dc565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105a9578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105a093929190611bee565b60405180910390fd5b50505050565b6105ca83838360405180602001604052806000815250610779565b505050565b60006105da826108fd565b9050919050565b60006001600660008282546105f69190611c54565b925050819055506000600654905061060e8382610bf6565b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068a5760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161068191906117f9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546106e090611bbd565b80601f016020809104026020016040519081016040528092919081815260200182805461070c90611bbd565b80156107595780601f1061072e57610100808354040283529160200191610759565b820191906000526020600020905b81548152906001019060200180831161073c57829003601f168201915b5050505050905090565b61077561076e6109c2565b8383610cef565b5050565b6107848484846104ad565b61079084848484610e5e565b50505050565b60606107a1826108fd565b5060006107ac611015565b905060008151116107cc57604051806020016040528060008152506107f7565b806107d68461102c565b6040516020016107e7929190611cc4565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610909836110fa565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361097c57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610973919061190f565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6109d78383836001611137565b505050565b6000806109e8846110fa565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a2a57610a298184866112fc565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610abb57610a6c600085600080611137565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b3e576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c685760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610c5f91906117f9565b60405180910390fd5b6000610c76838360006109dc565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cea5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610ce191906117f9565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d6057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d5791906117f9565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e519190611688565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561100f578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610ea26109c2565b8685856040518563ffffffff1660e01b8152600401610ec49493929190611d3d565b6020604051808303816000875af1925050508015610f0057506040513d601f19601f82011682018060405250810190610efd9190611d9e565b60015b610f84573d8060008114610f30576040519150601f19603f3d011682016040523d82523d6000602084013e610f35565b606091505b506000815103610f7c57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f7391906117f9565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461100d57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161100491906117f9565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606000600161103b846113c0565b01905060008167ffffffffffffffff81111561105a576110596119a0565b5b6040519080825280601f01601f19166020018201604052801561108c5781602001600182028036833780820191505090505b509050600082602001820190505b6001156110ef578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816110e3576110e2611dcb565b5b0494506000850361109a575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806111705750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156112a4576000611180846108fd565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156111eb57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156111fe57506111fc81846107ff565b155b1561124057826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161123791906117f9565b60405180910390fd5b81156112a257838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611307838383611513565b6113bb57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361137c57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611373919061190f565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016113b2929190611dfa565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061141e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161141457611413611dcb565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061145b576d04ee2d6d415b85acef8100000000838161145157611450611dcb565b5b0492506020810190505b662386f26fc10000831061148a57662386f26fc1000083816114805761147f611dcb565b5b0492506010810190505b6305f5e10083106114b3576305f5e10083816114a9576114a8611dcb565b5b0492506008810190505b61271083106114d85761271083816114ce576114cd611dcb565b5b0492506004810190505b606483106114fb57606483816114f1576114f0611dcb565b5b0492506002810190505b600a831061150a576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115cb57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061158c575061158b84846107ff565b5b806115ca57508273ffffffffffffffffffffffffffffffffffffffff166115b283610985565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61161d816115e8565b811461162857600080fd5b50565b60008135905061163a81611614565b92915050565b600060208284031215611656576116556115de565b5b60006116648482850161162b565b91505092915050565b60008115159050919050565b6116828161166d565b82525050565b600060208201905061169d6000830184611679565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116dd5780820151818401526020810190506116c2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611705826116a3565b61170f81856116ae565b935061171f8185602086016116bf565b611728816116e9565b840191505092915050565b6000602082019050818103600083015261174d81846116fa565b905092915050565b6000819050919050565b61176881611755565b811461177357600080fd5b50565b6000813590506117858161175f565b92915050565b6000602082840312156117a1576117a06115de565b5b60006117af84828501611776565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117e3826117b8565b9050919050565b6117f3816117d8565b82525050565b600060208201905061180e60008301846117ea565b92915050565b61181d816117d8565b811461182857600080fd5b50565b60008135905061183a81611814565b92915050565b60008060408385031215611857576118566115de565b5b60006118658582860161182b565b925050602061187685828601611776565b9150509250929050565b600080600060608486031215611899576118986115de565b5b60006118a78682870161182b565b93505060206118b88682870161182b565b92505060406118c986828701611776565b9150509250925092565b6000602082840312156118e9576118e86115de565b5b60006118f78482850161182b565b91505092915050565b61190981611755565b82525050565b60006020820190506119246000830184611900565b92915050565b6119338161166d565b811461193e57600080fd5b50565b6000813590506119508161192a565b92915050565b6000806040838503121561196d5761196c6115de565b5b600061197b8582860161182b565b925050602061198c85828601611941565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119d8826116e9565b810181811067ffffffffffffffff821117156119f7576119f66119a0565b5b80604052505050565b6000611a0a6115d4565b9050611a1682826119cf565b919050565b600067ffffffffffffffff821115611a3657611a356119a0565b5b611a3f826116e9565b9050602081019050919050565b82818337600083830152505050565b6000611a6e611a6984611a1b565b611a00565b905082815260208101848484011115611a8a57611a8961199b565b5b611a95848285611a4c565b509392505050565b600082601f830112611ab257611ab1611996565b5b8135611ac2848260208601611a5b565b91505092915050565b60008060008060808587031215611ae557611ae46115de565b5b6000611af38782880161182b565b9450506020611b048782880161182b565b9350506040611b1587828801611776565b925050606085013567ffffffffffffffff811115611b3657611b356115e3565b5b611b4287828801611a9d565b91505092959194509250565b60008060408385031215611b6557611b646115de565b5b6000611b738582860161182b565b9250506020611b848582860161182b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bd557607f821691505b602082108103611be857611be7611b8e565b5b50919050565b6000606082019050611c0360008301866117ea565b611c106020830185611900565b611c1d60408301846117ea565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c5f82611755565b9150611c6a83611755565b9250828201905080821115611c8257611c81611c25565b5b92915050565b600081905092915050565b6000611c9e826116a3565b611ca88185611c88565b9350611cb88185602086016116bf565b80840191505092915050565b6000611cd08285611c93565b9150611cdc8284611c93565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611d0f82611ce8565b611d198185611cf3565b9350611d298185602086016116bf565b611d32816116e9565b840191505092915050565b6000608082019050611d5260008301876117ea565b611d5f60208301866117ea565b611d6c6040830185611900565b8181036060830152611d7e8184611d04565b905095945050505050565b600081519050611d9881611614565b92915050565b600060208284031215611db457611db36115de565b5b6000611dc284828501611d89565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050611e0f60008301856117ea565b611e1c6020830184611900565b939250505056fea264697066735822122057782b93e4621618210c0f8a150d0d37ebbc99a503e416ed3a2923a23ba1de4264736f6c63430008140033";

type ERC721MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Mock__factory extends ContractFactory {
  constructor(...args: ERC721MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      ERC721Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Mock__factory {
    return super.connect(runner) as ERC721Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MockInterface {
    return new Interface(_abi) as ERC721MockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC721Mock {
    return new Contract(address, _abi, runner) as unknown as ERC721Mock;
  }
}
